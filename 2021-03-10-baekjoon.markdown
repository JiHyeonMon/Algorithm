---
layout: post
title:  "Baekjoon 알고리즘 67"
date:   2021-03-10 23:59 +0530
categories: python
---

알고리즘 풀기 84일차

:)

- #1158     요세푸스 문제

# <문제 설명>

요세푸스 문제는 다음과 같다.

1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고, 양의 정수 K(≤ N)가 주어진다. 이제 순서대로 K번째 사람을 제거한다. 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나간다. 이 과정은 N명의 사람이 모두 제거될 때까지 계속된다. 원에서 사람들이 제거되는 순서를 (N, K)-요세푸스 순열이라고 한다. 예를 들어 (7, 3)-요세푸스 순열은 <3, 6, 2, 7, 5, 1, 4>이다.

N과 K가 주어지면 (N, K)-요세푸스 순열을 구하는 프로그램을 작성하시오.

# <제한사항>

시간 제한:  2 초

메모리 제한:  256 MB


# <풀이>

```python

from collections import deque
N, K = map(int, input().split())
n = deque([i+1 for i in range(N)])
answer = []
index = 0
while len(n)>0:
     while index < K-1:
          n.append(n.popleft())
          index+=1
     answer.append(str(n[0]))
     n.popleft()
     index = 0

print("<%s>" %(", ".join(answer)))

```

---

- #11866     요새푸스 문제 0

# <문제 설명>

요세푸스 문제는 다음과 같다.

1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고, 양의 정수 K(≤ N)가 주어진다. 이제 순서대로 K번째 사람을 제거한다. 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나간다. 이 과정은 N명의 사람이 모두 제거될 때까지 계속된다. 원에서 사람들이 제거되는 순서를 (N, K)-요세푸스 순열이라고 한다. 예를 들어 (7, 3)-요세푸스 순열은 <3, 6, 2, 7, 5, 1, 4>이다.

N과 K가 주어지면 (N, K)-요세푸스 순열을 구하는 프로그램을 작성하시오.

# <제한사항>

시간 제한:  2 초

메모리 제한:  512 MB

# <풀이>

```python

from collections import deque
N, K = map(int, input().split())
n = deque([i+1 for i in range(N)])
answer = []
index = 0
while len(n)>0:
     while index < K-1:
          n.append(n.popleft())
          index+=1
     answer.append(str(n[0]))
     n.popleft()
     index = 0

print("<%s>" %(", ".join(answer)))

```

ㅎㅎㅎ어제 푼 위의 문제 다시 푸려고 단계별의 큐, 덱 문제인줄 알고 들어갔는데 알고보니 다른 문제였는데 완전 똑같음. 

그리고 차이는 메모리! (어제 푼 게 더 적은 메모리)

아무튼 어제 시간 초과나서 못 푼 것 - 코드 바꾼 것 없이 배열 쓴 것 deque를 쓰니 바로 시간초과 해결 됐다.

코드론 문제 없는데 배열로 그냥 pop(0)을 호출할 경우 index 0 번째 자리가 빠지고 다시 하나씩 앞당기는 정렬이 일어나기에 시간 복잡도가 커진다. (정렬 추가)

그러나 deque를 쓰면 그냥 앞뒤로 빼고 넣을 수 있으니 정렬이 없어지니 시간이 덜 든다. 

(해당과 똑같이 시간초과 걸린거 몇 일 전에 풀었으면서 ,,, 배면 pop(0)을 쓰는 나,,,)