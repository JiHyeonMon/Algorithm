---
layout: post
title:  "Baekjoon 알고리즘 44"
date:   2021-01-18 23:55 +0530
categories: python
---

알고리즘 풀기 56일차

:)


- #9375     패션왕 신해빈

해빈이는 패션에 매우 민감해서 한번 입었던 옷들의 조합을 절대 다시 입지 않는다. 예를 들어 오늘 해빈이가 안경, 코트, 상의, 신발을 입었다면, 다음날은 바지를 추가로 입거나 안경대신 렌즈를 착용하거나 해야한다. 해빈이가 가진 의상들이 주어졌을때 과연 해빈이는 알몸이 아닌 상태로 며칠동안 밖에 돌아다닐 수 있을까?


첫째 줄에 테스트 케이스가 주어진다. 테스트 케이스는 최대 100이다.

각 테스트 케이스의 첫째 줄에는 해빈이가 가진 의상의 수 n(0 ≤ n ≤ 30)이 주어진다.
다음 n개에는 해빈이가 가진 의상의 이름과 의상의 종류가 공백으로 구분되어 주어진다. 같은 종류의 의상은 하나만 입을 수 있다.
모든 문자열은 1이상 20이하의 알파벳 소문자로 이루어져있으며 같은 이름을 가진 의상은 존재하지 않는다.


```python

for i in range(int(input())):
     n = int(input())
     cloth={}
     answer = 1
     for i in range(n):
          name, kind = input().split()
          if kind not in cloth.keys():
               cloth[kind] = 1
          else:
               cloth[kind] += 1
     for kind in cloth:
          answer *= (cloth[kind]+1)
     print(answer-1)


```

오랜만에 한번만에 정답을 맞이해서 기쁘다.
문제를 보고 다이나믹에서 자주 보던거라 헐,,,어찌 풀지부터 생각이 들었는데, 테스트 케이스를 보고 생각하다 나름 경우의 수를 생각해서 풀어보자 생각이 들었다.

```python
'''
2
3
hat headgear
sunglasses eyewear
turban headgear
3
mask face
sunglasses face
makeup face
'''
```

테스트 케이스는 위와 같다. 오른쪽이 headgear 중복이 있으면 headgear로 쓸 수 있는 것이 2개, eyewear로 쓸 수 있는 것이 1개가 된다. 두번째 예시는 face에 쓸 수 있는 것이 3개가 되는 것이다.

각 쓸 수 있는 종류와 이름들이 다르기에 배열보다는 딕셔너리를 써보자는 생각이 들어서, 오른쪽 종류를 키로 새로운 키가 입력으로 오면 value를 하나씩 증가시키며 dictionary를 작성하였다.

이제 결과로 수를 구할때는, 각 종류의 경우를 따졌다. headgear가 2개면 경우는 3이 있다. (아무것도 안하는 경우). 그렇기에 각 종류 value에 +1한 값을 곱하고 마지막으로 알몸인 상태는 없으니 모두 0인 경우 1개를 빼줘서 답을 도출할 수 있다. 