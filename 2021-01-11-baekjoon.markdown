---
layout: post
title:  "Baekjoon 알고리즘 39"
date:   2021-01-11 22:30 +0530
categories: python
---

알고리즘 풀기 51일차

오늘 집 오자마자 혼맥을 했다.

아주 즐겁게 넷플릭스를 보고 있는데, 이러다 알고리즘 안풀고 잠에 들 것 같아 호다닥 푸는데 자꾸 안풀려서,,,(사실 잘 안뵈임,,) 술이 점점 깨간다...

호다닥 풀고 다시 넷플릭스 보러 가서 맥주와 함꼐 기절할 예쩡,,,,

:)


- #13305     주유소

어떤 나라에 N개의 도시가 있다. 이 도시들은 일직선 도로 위에 있다. 편의상 일직선을 수평 방향으로 두자. 제일 왼쪽의 도시에서 제일 오른쪽의 도시로 자동차를 이용하여 이동하려고 한다. 인접한 두 도시 사이의 도로들은 서로 길이가 다를 수 있다. 도로 길이의 단위는 km를 사용한다.

처음 출발할 때 자동차에는 기름이 없어서 주유소에서 기름을 넣고 출발하여야 한다. 기름통의 크기는 무제한이어서 얼마든지 많은 기름을 넣을 수 있다. 도로를 이용하여 이동할 때 1km마다 1리터의 기름을 사용한다. 각 도시에는 단 하나의 주유소가 있으며, 도시 마다 주유소의 리터당 가격은 다를 수 있다. 가격의 단위는 원을 사용한다.

예를 들어, 이 나라에 다음 그림처럼 4개의 도시가 있다고 하자. 원 안에 있는 숫자는 그 도시에 있는 주유소의 리터당 가격이다. 도로 위에 있는 숫자는 도로의 길이를 표시한 것이다. 

![image](https://user-images.githubusercontent.com/50662636/104188826-2e468f80-545d-11eb-92fa-d1c0586732ed.png)


제일 왼쪽 도시에서 6리터의 기름을 넣고, 더 이상의 주유 없이 제일 오른쪽 도시까지 이동하면 총 비용은 30원이다. 만약 제일 왼쪽 도시에서 2리터의 기름을 넣고(2×5 = 10원) 다음 번 도시까지 이동한 후 3리터의 기름을 넣고(3×2 = 6원) 다음 도시에서 1리터의 기름을 넣어(1×4 = 4원) 제일 오른쪽 도시로 이동하면, 총 비용은 20원이다. 또 다른 방법으로 제일 왼쪽 도시에서 2리터의 기름을 넣고(2×5 = 10원) 다음 번 도시까지 이동한 후 4리터의 기름을 넣고(4×2 = 8원) 제일 오른쪽 도시까지 이동하면, 총 비용은 18원이다.

각 도시에 있는 주유소의 기름 가격과, 각 도시를 연결하는 도로의 길이를 입력으로 받아 제일 왼쪽 도시에서 제일 오른쪽 도시로 이동하는 최소의 비용을 계산하는 프로그램을 작성하시오.

```python
#1

N = int(input())

oil = list(map(int, input().split()))
price = list(map(int, input().split()))
answer = 0
for i in range(0, N-1):
     min = price[i]
     for j in range(0, i+1):
          if min > price[j]:
               min = price[j]
     answer+=min*oil[i]
     
print(answer)


```

우선 거리로 주는 맨 마지막은 (price의 맨 마지막)은 필요없다. 마지막 지역의 가격은 굳이 필요치 않기에 N-1까지 공통적으로 보기로 했다.

각 거리까지의 가격 중 최저값을 저장해두고 비교하며 최저인 곳에서 oil을 사는 알고리즘을 생각했다.

시.간.초.과

---

```python
#2

import sys

N = sys.stdin.readline()

oil = list(map(int, sys.stdin.readline().split()))
price = list(map(int, sys.stdin.readline().split()))
answer = 0
for i in range(0, N-1):
     min = price[i]
     for j in range(0, i+1):
          if min > price[j]:
               min = price[j]
     answer+=min*oil[i]
     
print(answer)

```

단순하게 import sys를 통해 input()의 시간을 단축시켜 봤다.

런.타.임.에.러

---

```python
#3

import sys

N = int(sys.stdin.readline())

oil = list(map(int, sys.stdin.readline().split()))
price = list(map(int, sys.stdin.readline().split()))
answer = price[0]*oil[0]

for i in range(1, N-1):
     answer+=min(price[:i+1])*oil[i]
     
print(answer)

```

sys 입력을 그대로 두고 맨 처음 지역까지의 기름값은 첫 지역에서 필수니 answer에 첫 지역 값을 초기화 한 후 배열 1부터 시작한다.

여기서 i까지의 price의 최소를 구해서 oil을 구한다. (min이용)

시.간.초.과

---

```python
#4

N = int(sys.stdin.readline())

oil = list(map(int, sys.stdin.readline().split()))
price = list(map(int, sys.stdin.readline().split()))
answer = price[0]*oil[0]
minP = price[0]

for i in range(1, N-1):
     minP = min(minP, price[i])
     answer += minP * oil[i]
print(answer)

```

이제쯤 오니 조굼씩 화가나서 찾아봤다.

(ㅂㄷㅂㄷ)벡준,,,15503,,,시간초과,,,구글링

찾아보니 min(n)의 시간복잡도가 n이라서 그냥 매번 min구해 초기화 시켜줘 O(1)로 만든다.

```python
#5

N = int(sys.stdin.readline())

oil = list(map(int, sys.stdin.readline().split()))
price = list(map(int, sys.stdin.readline().split()))
answer = price[0]*oil[0]
minP = price[0]

for i in range(1, N-1):
     minP = min(minP, price[i])
     answer += minP * oil[i]
print(answer)

```

근데 참 바보같이 답 제출할때 import sys 안해서 런타임 에러 뜸.

---

```python
#6

import sys

N = int(sys.stdin.readline())

oil = list(map(int, sys.stdin.readline().split()))
price = list(map(int, sys.stdin.readline().split()))
answer = price[0]*oil[0]
minP = price[0]

for i in range(1, N-1):
     minP = min(minP, price[i])
     answer += minP * oil[i]
print(answer)

```

성공
min()함수 썼을 때, 아래는 안썼을 때.

---

```python
#7

import sys

N = int(sys.stdin.readline())

oil = list(map(int, sys.stdin.readline().split()))
price = list(map(int, sys.stdin.readline().split()))
answer = price[0]*oil[0]
minP = price[0]

for i in range(1, N-1):
     if minP>price[i]:
          minP = price[i]
     answer += minP * oil[i]
     
print(answer)

```

---


![image](https://user-images.githubusercontent.com/50662636/104188717-0820ef80-545d-11eb-963e-798727c037a1.png)
