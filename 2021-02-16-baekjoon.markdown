---
layout: post
title:  "Baekjoon 알고리즘 57"
date:   2021-02-16 23:14 +0530
categories: python
---

알고리즘 풀기 71일차


:)

- #18258        큐 2

정수를 저장하는 큐를 구현한 다음, 입력으로 주어지는 명령을 처리하는 프로그램을 작성하시오.

명령은 총 여섯 가지이다.

- push X: 정수 X를 큐에 넣는 연산이다.
- pop: 큐에서 가장 앞에 있는 정수를 빼고, 그 수를 출력한다. 만약 큐에 들어있는 정수가 없는 경우에는 -1을 출력한다.
- size: 큐에 들어있는 정수의 개수를 출력한다.
- empty: 큐가 비어있으면 1, 아니면 0을 출력한다.
- front: 큐의 가장 앞에 있는 정수를 출력한다. 만약 큐에 들어있는 정수가 없는 경우에는 -1을 출력한다.
- back: 큐의 가장 뒤에 있는 정수를 출력한다. 만약 큐에 들어있는 정수가 없는 경우에는 -1을 출력한다.


# <풀이>

```python
#정답
from collections import deque
import sys
queue = deque()
for i in range(int(sys.stdin.readline())):
     tmp = sys.stdin.readline()
     if tmp[0:4] == 'push':
          queue.append(int(tmp[5:]))
     if tmp[0:3] == 'pop':
          if not queue:
               print(-1)
          else:
               print(queue.popleft())
     if tmp[0] == 's':
          print(len(queue))
     if tmp[0] == 'e':
          if not queue:
               print(1)
          else:
               print(0)
     if tmp[0] == 'f':
          if not queue:
               print(-1)
          else:
               print(queue[0])
     if tmp[0] == 'b':
          if not queue:
               print(-1)
          else:
               print(queue[-1])

```

처음에 아래와 같이 풀었다. 
스택과 동일하게 구현하였으나 시간초과 오류가 났다. 찾아보니 pop의 과정에서 제일 앞에 것을 빼다보니 다시 배열 정렬하며 시간 복잡도가 O(n)이 되는 것이다. 

그래서 찾아보니 파이썬에서 deque를 써서 구현하였다. pop만 바꿔줬는데 통과할 수 있었다. 


```python
#시간 초과
import sys
queue = []
for i in range(int(sys.stdin.readline())):
     tmp = sys.stdin.readline()
     if tmp[0:4] == 'push':
          queue.append(int(tmp[5:]))
     if tmp[0:3] == 'pop':
          if not queue:
               print(-1)
          else:
               print(queue.pop(0))
     if tmp[0] == 's':
          print(len(queue))
     if tmp[0] == 'e':
          if not queue:
               print(1)
          else:
               print(0)
     if tmp[0] == 'f':
          if not queue:
               print(-1)
          else:
               print(queue[0])
     if tmp[0] == 'b':
          if not queue:
               print(-1)
          else:
               print(queue[-1])

```