---
layout: post
title:  "Baekjoon 알고리즘 36"
date:   2021-01-08 00:00 +0530
categories: python
---

알고리즘 풀기 48일차

:)


- #11399     ATM

인하은행에는 ATM이 1대밖에 없다. 지금 이 ATM앞에 N명의 사람들이 줄을 서있다. 사람은 1번부터 N번까지 번호가 매겨져 있으며, i번 사람이 돈을 인출하는데 걸리는 시간은 Pi분이다.

사람들이 줄을 서는 순서에 따라서, 돈을 인출하는데 필요한 시간의 합이 달라지게 된다. 예를 들어, 총 5명이 있고, P1 = 3, P2 = 1, P3 = 4, P4 = 3, P5 = 2 인 경우를 생각해보자. [1, 2, 3, 4, 5] 순서로 줄을 선다면, 1번 사람은 3분만에 돈을 뽑을 수 있다. 2번 사람은 1번 사람이 돈을 뽑을 때 까지 기다려야 하기 때문에, 3+1 = 4분이 걸리게 된다. 3번 사람은 1번, 2번 사람이 돈을 뽑을 때까지 기다려야 하기 때문에, 총 3+1+4 = 8분이 필요하게 된다. 4번 사람은 3+1+4+3 = 11분, 5번 사람은 3+1+4+3+2 = 13분이 걸리게 된다. 이 경우에 각 사람이 돈을 인출하는데 필요한 시간의 합은 3+4+8+11+13 = 39분이 된다.

줄을 [2, 5, 1, 4, 3] 순서로 줄을 서면, 2번 사람은 1분만에, 5번 사람은 1+2 = 3분, 1번 사람은 1+2+3 = 6분, 4번 사람은 1+2+3+3 = 9분, 3번 사람은 1+2+3+3+4 = 13분이 걸리게 된다. 각 사람이 돈을 인출하는데 필요한 시간의 합은 1+3+6+9+13 = 32분이다. 이 방법보다 더 필요한 시간의 합을 최소로 만들 수는 없다.

줄을 서 있는 사람의 수 N과 각 사람이 돈을 인출하는데 걸리는 시간 Pi가 주어졌을 때, 각 사람이 돈을 인출하는데 필요한 시간의 합의 최솟값을 구하는 프로그램을 작성하시오.

```python

N = int(input())
time = sorted(list(map(int, input().split())))
total = 0
for i in range(N-1, -1, -1):
     total+=time[i]*(N-i)
print(total)

```

나는 동적 프로그래밍이랑 안맞는 것 같다. 알면서도 모르겠고, 어려운,,,오늘은 다른 것을 풀어보자하여 탐욕알고리즘의 쉬워보이는 문제를 펴보았다.

기존 풀던 문제보다 쉬운 문제기도 했지만 접근도 쉬워서 슥 풀었다.

모든 사람이 뽑는데 대기 시간의 최소였음 정렬 후 합이겠지만, 각 사람 시간의 합이기에 각 사람들 대기 시간을 다 더해주면 된다.

각 사람이니 첫번째 사람은 모든 순서에 걸쳐 나올 것이고, 두번째 사람은 첫번째 사람 뺀 모든 순서에 더해질 것이다.

결론적으로 마지막 사람은 한번, 앞으로 갈 수록 한번씩 더 더해주면 된다.

반복문을 반대로 돌려서 (사실 적은 수부터 많이 곱하는 방식으로 갈 수도 있지만) 하나씩 적게 곱해준 것을 total값에 넣어 구했다.

