---
layout: post
title:  "Baekjoon 알고리즘 9"
date:   2020-11-6 23:57 +0530
categories: python
---

알고리즘 풀기 9일차



:)



- #2775     부녀회장이 될테야

평소 반상회에 참석하는 것을 좋아하는 주희는 이번 기회에 부녀회장이 되고 싶어 각 층의 사람들을 불러 모아 반상회를 주최하려고 한다.

이 아파트에 거주를 하려면 조건이 있는데, “a층의 b호에 살려면 자신의 아래(a-1)층의 1호부터 b호까지 사람들의 수의 합만큼 사람들을 데려와 살아야 한다” 는 계약 조항을 꼭 지키고 들어와야 한다.

아파트에 비어있는 집은 없고 모든 거주민들이 이 계약 조건을 지키고 왔다고 가정했을 때, 주어지는 양의 정수 k와 n에 대해 k층에 n호에는 몇 명이 살고 있는지 출력하라. 단, 아파트에는 0층부터 있고 각층에는 1호부터 있으며, 0층의 i호에는 i명이 산다.


```python
#2775
#부녀회장이 될테야

l = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14]]
for i in range(1,15):
     ls = []
     for j in range(0,14):
          ls.append(sum(l[i-1][0:j+1]))
     l.append(ls)
     
case = int(input())
for i in range(case):
     k = int(input())
     n = int(input())
     print(l[k][n-1])

    
```
우선 0층부터 14층까지 15칸, 14호의 테이블을 만들어서 각 호에 몇 명이 사는지 미리 구해놓고 시작했다.

그래서 그냥 입력받은 것을 해당 배열에서 찾는 방식으로 했다. 

0층은 이제 i호당 i명이니 미리 l[0]을 삽입해놨다.

이후 1부터 14층까지니 15까지 for문을 실행시키고, 2중 for문으로 안에 호실 별로 사람수를 넣는다.

사람 수는 아래층이니 i-1층으로 세팅하고 sum함수로 리스트들의 인덱스로 합을 쉽게 구할 수 있었다ㅠㅠ 대박.

그래서 한층 아래의 해당 호실까지의 합으로 칸칸이 넣으면 끝.


---