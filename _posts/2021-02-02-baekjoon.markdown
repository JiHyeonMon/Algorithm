---
layout: post
title:  "Baekjoon 알고리즘 53"
date:   2021-02-02 23:55 +0530
categories: python
---

알고리즘 풀기 66일차


:)


- #1339     단어 수학

민식이는 수학학원에서 단어 수학 문제를 푸는 숙제를 받았다.

단어 수학 문제는 N개의 단어로 이루어져 있으며, 각 단어는 알파벳 대문자로만 이루어져 있다. 이때, 각 알파벳 대문자를 0부터 9까지의 숫자 중 하나로 바꿔서 N개의 수를 합하는 문제이다. 같은 알파벳은 같은 숫자로 바꿔야 하며, 두 개 이상의 알파벳이 같은 숫자로 바뀌어지면 안 된다.

예를 들어, GCF + ACDEB를 계산한다고 할 때, A = 9, B = 4, C = 8, D = 6, E = 5, F = 3, G = 7로 결정한다면, 두 수의 합은 99437이 되어서 최대가 될 것이다.

N개의 단어가 주어졌을 때, 그 수의 합을 최대로 만드는 프로그램을 작성하시오.

```python
#ing
word = []
for i in range(int(input())):
     word.append(list(input()))

word.sort(key=len, reverse=True)

print(word)

```


```python
#ing

word = []
alpha = {}
k = 9
answer =[]
for i in range(int(input())):
     word.append(list(input()))

word.sort(key=len, reverse=True)

for i in range(len(word)):
     for j in range(len(word[i])):
          if word[i][j] not in alpha:
               alpha[word[i][j]] = k
               k-=1
               
for i in range(len(word)):
     tmp=0
     for j in range(len(word[i])):
          tmp += alpha[word[i][j]] * 10**(len(word[i])-j-1)
     answer.append(tmp)
     
print(alpha)
print(sum(answer))

'''

AB
BA
{'A': 9, 'B': 8}
187

{'A': 9, 'B': 8, 'C': 7, 'D': 6, 'E': 5, 'F': 4, 'G': 3, 'H': 2, 'I': 1, 'J': 0}
45

AAA
AAA
{'A': 9}
1998

GCF
ACDEB
{'A': 9, 'C': 8, 'D': 7, 'E': 6, 'B': 5, 'G': 4, 'F': 3}
99248
[98765, 483]

'''

```

아직 까지 잡고 있는 문제,,,
위 주석으로 테스트케이스를 보면 위의 3개는 잘 된다.
그러나 문제는 맨 아래. 저렇게 잘못된 이유는 G와 D가 같은 100의 자리 수니까 D갔다가 G를 할당해야하는데 ACDEB순으로 수를 할당하기에 G에 1의 자리 수보다 작은 수가 들어간다. 로직을 잘못 생각했다.

어떻게하면 좋을까,,,,
그래서 사람들 코드 스을쩍 찾아보다 반대로 푸는 사람들이 많다는 것을 봤다. 난 딕셔너리에 9부터 0까지 넣어줬는데 사람들은 10의 제곱수를 넣고 반복문을 통해 9부터 곱해주는 방식을 많이들 쓰는 것 같았다.

그렇지만,,,,풀기로 한 방법 찾고 해보고 실패하면 그렇게 수정하기로 하고 우선 이 방법으로 해내고 싶다.

근데 또 생각하자니 이럼 또 반복문이 필수. 그럼 시간초과가 분명 뜰 것 같다.
위에 사람들이 푼 방법이 아무리 생각해도 최적인 것 같다. (최소한의 반복문)

내일 다시 또 수정을 거쳐봐야겠다.
