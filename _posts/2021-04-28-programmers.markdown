---
layout: post
title: "프로그래머스 코딩테스트"
date: 2021-04-28 23:59 +0530
categories: python
---

알고리즘 풀기 109일차

:)

- # 피보나치 수

>

## < 문제 >

피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다.

예를들어

    F(2) = F(0) + F(1) = 0 + 1 = 1
    F(3) = F(1) + F(2) = 1 + 1 = 2
    F(4) = F(2) + F(3) = 1 + 2 = 3
    F(5) = F(3) + F(4) = 2 + 3 = 5

와 같이 이어집니다.

2 이상의 n이 입력되었을 때, n번째 피보나치 수를 1234567으로 나눈 나머지를 리턴하는 함수, solution을 완성해 주세요.

## < 조건 >

n은 1이상, 100000이하인 자연수입니다.

## < 풀이 >

```python

def solution(n):
    F = [0, 1]
    for i in range(2, n):
        F.append(F[-1]+F[-2])
    return (F[-1]+F[-2])%1234567

```

오늘은 쉬운 문제 하나.

재귀함수로 계속 호출하게 풀었더니 당연 시간초과가 떴다. (시간 제한 없는 줄,,)

그래서 피보나치 수 저장할 F라는 배열을 만들고 차곡차곡 값을 넣는다.

리턴시 조건에 따라 1234567으로 나눠준다. (안나눠주니 런타임 에러)
