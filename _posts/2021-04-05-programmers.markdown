---
layout: post
title: "프로그래머스 코딩테스트"
date: 2021-04-05 23:59 +0530
categories: python
---

알고리즘 풀기 94일차

:)

- # 위장

## < 문제 >

스파이들은 매일 다른 옷을 조합하여 입어 자신을 위장합니다.

예를 들어 스파이가 가진 옷이 아래와 같고 오늘 스파이가 동그란 안경, 긴 코트, 파란색 티셔츠를 입었다면 다음날은 청바지를 추가로 입거나 동그란 안경 대신 검정 선글라스를 착용하거나 해야 합니다.

> 종류 이름

> 얼굴 동그란 안경, 검정 선글라스

> 상의 파란색 티셔츠

> 하의 청바지

> 겉옷 긴 코트

스파이가 가진 의상들이 담긴 2차원 배열 clothes가 주어질 때 서로 다른 옷의 조합의 수를 return 하도록 solution 함수를 작성해주세요.

## < 제한사항 >

clothes의 각 행은 [의상의 이름, 의상의 종류]로 이루어져 있습니다.

스파이가 가진 의상의 수는 1개 이상 30개 이하입니다.

같은 이름을 가진 의상은 존재하지 않습니다.

clothes의 모든 원소는 문자열로 이루어져 있습니다.

모든 문자열의 길이는 1 이상 20 이하인 자연수이고 알파벳 소문자 또는 '\_' 로만 이루어져 있습니다.

스파이는 하루에 최소 한 개의 의상은 입습니다.

## < 풀이 >

```python

def solution(clothes):
    spy = {}
    answer = 1
    for (name, kind) in clothes:
        if kind in spy.keys():
            spy[kind] += 1
        else:
            spy[kind] = 1

    for i in spy.values():
        answer *= i+1
    return answer-1

```

쉬운 문제 걸렸다.

굉장 낯이 익은 문제인데 생각해보니 백준에서 이와 비슷한 문제를 풀었다. 역시 같이 딕셔너리를 떠올려 풀었다.

우선 종류별로 개수를 넣었다.

반복문을 돌며 dictionary에 해당 kind가 있는지 확인하고 없으면 해당 kind를 키로 1을 세팅, 해당 종류가 있으면 +1 로 개수 증가시킨다.

> {'headgear': 2}

이런 식으로 종류와 개수를 넣었다.

이후에 계산을 하면 된다.

> {'headgear': 2, 'face': 3}

위를 예로 들어보자. 뭐든 하나는 무조건 차야한다. 모든 종류를 찰 필요는 없다.

경우의 수를 따지면 헤드기어는 현재 2개있지만 안끼는 경우도 하나 있다. (총 3개)

다른 종류도 모두 안낄 수 있는 경우도 추가하여 +1 씩 한다.

그리고 마지막으로 모든 종류를 안끼는 경우 딱 한번을 빼주면 된다.
