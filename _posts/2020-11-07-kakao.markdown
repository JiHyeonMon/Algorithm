---
layout: post
title:  "2019 KAKAO BLIND RECRUITMENT - 실패율"
date:   2020-11-7 00:38 +0530
categories: python, kakao
---

알고리즘 풀기 9-10일차
:)


# 2019 카카오 블라인드 채용 문제
# 실패율


![image](https://user-images.githubusercontent.com/50662636/98383731-331f4980-2090-11eb-8386-b79cf267f2d6.png)

슈퍼 게임 개발자 오렐리는 큰 고민에 빠졌다. 

그녀가 만든 프랜즈 오천성이 대성공을 거뒀지만, 요즘 신규 사용자의 수가 급감한 것이다. 원인은 신규 사용자와 기존 사용자 사이에 스테이지 차이가 너무 큰 것이 문제였다.

이 문제를 어떻게 할까 고민 한 그녀는 동적으로 게임 시간을 늘려서 난이도를 조절하기로 했다. 

역시 슈퍼 개발자라 대부분의 로직은 쉽게 구현했지만, 실패율을 구하는 부분에서 위기에 빠지고 말았다. 오렐리를 위해 실패율을 구하는 코드를 완성하라.


실패율은 다음과 같이 정의한다.

### 스테이지에 도달했으나 아직 클리어하지 못한 플레이어의 수 / 스테이지에 도달한 플레이어 수

전체 스테이지의 개수 N, 게임을 이용하는 사용자가 현재 멈춰있는 스테이지의 번호가 담긴 배열 stages가 매개변수로 주어질 때, 실패율이 높은 스테이지부터 내림차순으로 스테이지의 번호가 담겨있는 배열을 return 하도록 solution 함수를 완성하라.



```python
#2019 카카오 블라인드 채용 문제
#실패율

def solution(N, stages):
     answer = []
     n = {}
     for i in range(0,N):
          bigger = 0
          for j in range(0, len(stages)):
               if stages[j] >= i+1:
                    bigger += 1
          if stages.count(i+1)==0:
               n[i+1]=0
          else:
               n[i+1]= stages.count(i+1)/bigger

     n = sorted(n.items(), key=lambda t : t[1], reverse = True)

     for i in range(0,N):
          answer.append(n[i][0])
     return answer

```

우선 스테이지 개수만큼 라운드 돌면서 실패율을 계산한다.

해당 라운드에 머무르는 사람을 count함수로 세고, 그 이상을 통과한 사람을 bigger라는 변수에 담아 센다.

이때 담는 n은 딕셔너리로 선언하여 몇라운드의 실패율이 얼마인지 함께 기록한다.

이 딕셔너리를 lambda를 이용하여 value 값 기준으로 reverse 속성을 줘서 내림차 정렬을 시킨다. 

n = sorted(n.items(), key=lambda t : t[1], reverse = True)

이렇게 할 경우 이제 더 이상 딕셔너리가 아닌 리스트가 되어 다시 answer에 key값인 [0]에 위치한 값들만 넣어주는 정제 작업을 거친 후 출력한다.

이와 같은 코드로 테스트 케이스 두가지는 통과를 했는데, 실질적으로 세가지 테스트 케이스에서 시간초과 오류가 떴다. (눙물)

이중 for문 사용으로 그런 것 같은데, 이중 for문 없이 어떻게 나눌지 다시 생각해봐야 할 것 같다.


![image](https://user-images.githubusercontent.com/50662636/98384144-c193cb00-2090-11eb-8684-fe131ce53f46.png)
