---
layout: post
title:  "Baekjoon 알고리즘 67"
date:   2021-03-09 23:59 +0530
categories: python
---

알고리즘 풀기 83일차

:)

- #1158     요세푸스 문제

# <문제 설명>
요세푸스 문제는 다음과 같다.

1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고, 양의 정수 K(≤ N)가 주어진다. 이제 순서대로 K번째 사람을 제거한다. 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나간다. 이 과정은 N명의 사람이 모두 제거될 때까지 계속된다. 원에서 사람들이 제거되는 순서를 (N, K)-요세푸스 순열이라고 한다. 예를 들어 (7, 3)-요세푸스 순열은 <3, 6, 2, 7, 5, 1, 4>이다.

N과 K가 주어지면 (N, K)-요세푸스 순열을 구하는 프로그램을 작성하시오.

# <제한사항>

시간 제한:  2 초

메모리 제한:  256 MB


# <풀이>

```python

N, K = map(int, input().split())
n = [i+1 for i in range(N)]
answer = []
index = 0
while len(n)>0:
     while index < K-1:
          n.append(n.pop(0))
          index+=1
     answer.append(str(n[0]))
     n.pop(0)
     index = 0

print("<%s>" %(", ".join(answer)))

```

하쒸 ,,,,,,,, 2초인데 시간촟과

사실 while문 두번,  , 날 수밖ㅇ ㅔ 없을 거 같기도 하고

다른 떠오른 방법 : % 연산자를 사용하는 방법

내일 적용해볼까 한다.

for 문도 짜다가 while로 돌아왔는데,,,,,,,,,결국 시간초과

K만큼 후의 수를 출력 위해 index를 둬서 해당 index를 pop하는 것을 반복하는 방식으로 짰다.