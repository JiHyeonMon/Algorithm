---
layout: post
title:  "Baekjoon 알고리즘 25"
date:   2020-12-08 00:30 +0530
categories: python
---

알고리즘 풀기 36일차

:)


- #2748     피보나치 수 2

피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.

이를 식으로 써보면 Fn = Fn-1 + Fn-2 (n ≥ 2)가 된다.

n=17일때 까지 피보나치 수를 써보면 다음과 같다.

0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597

n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.


```python

num = [0,1]
for i in range(2, 91):
     num.append(num[i-2]+num[i-1])

print(num[int(input())])

```

입력 값은 피보나치 배열의 인덱스로 90까지의 입력값이 있다해서 90까지의 피보나치를 미리 구했다.

---

- #1003     피보나치 함수

fibonacci(3)을 호출하면 다음과 같은 일이 일어난다.

fibonacci(3)은 fibonacci(2)와 fibonacci(1) (첫 번째 호출)을 호출한다.
fibonacci(2)는 fibonacci(1) (두 번째 호출)과 fibonacci(0)을 호출한다.
두 번째 호출한 fibonacci(1)은 1을 출력하고 1을 리턴한다.
fibonacci(0)은 0을 출력하고, 0을 리턴한다.
fibonacci(2)는 fibonacci(1)과 fibonacci(0)의 결과를 얻고, 1을 리턴한다.
첫 번째 호출한 fibonacci(1)은 1을 출력하고, 1을 리턴한다.
fibonacci(3)은 fibonacci(2)와 fibonacci(1)의 결과를 얻고, 2를 리턴한다.
1은 2번 출력되고, 0은 1번 출력된다. N이 주어졌을 때, fibonacci(N)을 호출했을 때, 0과 1이 각각 몇 번 출력되는지 구하는 프로그램을 작성하시오.

```python

def fibonacci(n) :
     num = []
     if n == 0 :
          num.append(0)
     elif n == 1:
          num.append(1)
     else:
          return fibonacci(n-1) + fibonacci(n-2)
     return num

for i in range(int(input())):
     num = fibonacci(int(input()))
     print("{} {}".format(num.count(0), num.count(1)))

```

시간 초과 에러
내일 더 해봐야겠다.