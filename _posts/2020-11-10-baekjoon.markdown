---
layout: post
title:  "Baekjoon 알고리즘 12"
date:   2020-11-10 04:24 +0530
categories: python, 9020, 1085, 3009, 4153
---

알고리즘 풀기 12일차
:)


- #9020     골드바흐의 추측

```python
#9020
#골드바흐의 추측

import math
#미리 약수 리스트 만들어둠
prime = [2,3]
for i in range(4, 10001):
     t = True
     for j in range(2, int(math.sqrt(i))+1):
          if i%j==0:
               t = False
               break
     if t is True:prime.append(i)

num = int(input())
for i in range(0, num):
     n = int(input())
     if n//2 in prime:
          if (n//2)*2 == n:
               print(n//2, n//2)
               continue
     else:
          for i in range(n//2, 2, -1):
               if i in prime:
                    if n-i in prime:
                         print(i, n-i)
                         break

```

요즘 실패의 늪에 빠져살다 한번만에 성공하긴 정말 오랜만이라 눈물 광광-

미리 약수들을 모아둔 리스트를 만들고 시작한다.

테스트케이스 개수만큼 반복하는데, 우선 중간부터 생각한다. 중간 값이 소수면 바로 두 합이니 나누기 2한 값이 정답.

나누기 2한 값이 소수가 아니라면 차근차근 값을 내려가며 찾는다. (여러개 있어도 차가 적은 값을 선택해야하니 중간값에서 제일 먼저 만난게 차이가 제일 적은 것)

내려가다 만난 소수가 있다면, 입력값에서 뺀 값도 소수라면 그것이 정답.

---

- #1085     직사각형에서 탈출

```python
#1085     
#직사각형에서 탈출

x, y, w, h = map(int, input().split())
print(min(x, y, w-x, h-y))

```

아주 심플한 코드.

---

- #3009     네번째 점 

```python
#3009
#네번째 점

a = list(map(int,input().split()))
b = list(map(int,input().split()))
c = list(map(int,input().split()))

if a[0]==b[0]:
     x = c[0]
else:
     x = a[0] if a[0]!=c[0] else b[0]

if a[1]==b[1]:
     y = c[1]
else:
     y = a[1] if a[1]!=c[1] else b[1]
print(x, y)

```

세 점이 주어졌을 때, 축에 평행한 직사각형을 만들기 위해서 필요한 네 번째 점을 찾는 프로그램을 작성하시오.

쉬운데,,코드 간단하게 어떻게 분명할 수 있을텐데,,,머리가 안돌아가서 진짴ㅋㅋㅋ하드코딩함.

---

- #4153     직각삼각형

```python
#4153
#직각삼각형

while True:
     a = list(map(int, input().split()))
     if 0 in a:
          break

     a.sort()
     if a[2]**2 == a[0]**2 + a[1]**2:
          print("right")
     else:
          print("wrong")

```

세 수를 입력받는데 하나라도 0이면 삼각형이 안되니 break.

정렬을 해줘서 덧셈이 편해지도록 해주고 피타고라스 정의로 구한다.

---

