---
layout: post
title:  "Baekjoon 알고리즘 31"
date:   2020-12-21 23:54 +0530
categories: python
---

알고리즘 풀기 42일차

넘나리 오랜만에 풀어서 사실 풀다가 풀이 쬐꼼 힐끔 참고하였다.ㅋㅋㅋㅋㅋㅋㅋㅋㅋ

이제 내일부턴 더 시간들여 풀어야겠다. 

오늘은 가볍게 하나! ㅎㅎ (열심히 하겠다는 열정 다 불타서 없어짐...)

:)


- #1932     정수 삼각형

맨 위층 7부터 시작해서 아래에 있는 수 중 하나를 선택하여 아래층으로 내려올 때, 이제까지 선택된 수의 합이 최대가 되는 경로를 구하는 프로그램을 작성하라. 

아래층에 있는 수는 현재 층에서 선택된 수의 대각선 왼쪽 또는 대각선 오른쪽에 있는 것 중에서만 선택할 수 있다.


```python

n = int(input())
num = []
for i in range(n):
    num.append(list(map(int, input().split())))

k = 2
for i in range(1, n):
    for j in range(k):
        if j == 0:
            num[i][j] = num[i][j] + num[i - 1][j]
        elif i == j:
            num[i][j] = num[i][j] + num[i - 1][j - 1]
        else:
            num[i][j] = max(num[i - 1][j - 1], num[i - 1][j]) + num[i][j]
    k += 1
print(max(num[n - 1]))

```

처음에 num 리스트에 층 별로 숫자를 담아준다.

이제 합의 최대 값을 구해야하니 각 층을 내려오면서 합을 계산해서 다시 그 리스트에 넣어준다.

그러면 제일 마지막 층에 각 층의 합들이 쌓여있을텐데 그 중 최대값이 반환해주면 내려오며 합한 것의 최대가 된다.

