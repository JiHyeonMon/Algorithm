---
layout: post
title:  "Baekjoon 알고리즘 3"
date:   2020-10-30 03:01 +0530
categories: python
---

bakjoon 알고리즘 풀기 3일차

오늘 12시 수업에 3시 시험에 6시 수업 후 스터디 회의 + 회식까지 가며 제때 블로그 글을 올리지 못했다. ㅠ (사실 덜 풀기도 했고,,)
부랴부랴 새벽에 더 풀고 업로드 하지만, 목표했지만 못 푼 두 문제. 

다음 날 차시에 추가로 풀 예정 :)

- #1924	2007년

```python
#1924
#오늘은 2007년 1월 1일 월요일이다. 그렇다면 2007년 x월 y일은 무슨 요일일까? 이를 알아내는 프로그램을 작성하시오.

def day(x):
    return {1: 'MON', 2: 'TUE', 3: 'WED', 4: 'THU', 5:'FRI', 6:'SAT', 0:'SUN'}[x]

m, d = map(int, input().split())

list_m = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

if m > 1:
    for i in range(0, m-1):
        d += list_m[i]
    d%=7
else:
    d%=7

print(day(d))

```

1학년 C프로그래밍 수업을 들을 때 시험에 나왔던 문제 같았다. ㅎㅎㅎ 몇년만에 풀어서 가물가물했지만 달 별로 일 수를 다 합친 후 7로 나눈 나머지로 요일을 출력하는 방식으로 풀었다. 


---

- #11718	그대로 출력하기

```python
#11718
#입력 받은 대로 출력하는 프로그램을 작성하시오.

while True:
    try:
        print(input())
    except EOFError:
        break

```

while 문이 true 일 때 루프를 돌리는 형식으로  EOFError만 예외처리를 통해 break할 수 있도록 하였다. 
예외처리 안해줘서 런타임 오류가 났었다.


---

- #2562	최댓값

```python
#2562
#9개의 서로 다른 자연수가 주어질 때, 이들 중 최댓값을 찾고 그 최댓값이 몇 번째 수인지를 구하는 프로그램을 작성하시오.

max = 0
cnt = 0
for i in range(0,9):
    a = int(input())
    if a>max:
        max = a
        cnt = i+1

print(max)
print(cnt)

```

다풀고 생각하는거지만 cnt따로 안주고 index로 찾아도 될듯.

---

- #4673	셀프 넘버

```python
#오늘의 계획이지만,,아직 못 푼 문제

```

---

- #2675	문자열 반복

```python
#2675
#문자열 S를 입력받은 후에, 각 문자를 R번 반복해 새 문자열 P를 만든 후 출력하는 프로그램을 작성하시오.

total = int(input())
for i in range(0, total):
    sentence = ""
    num, a = input().split()
    for j in range(0 , len(a)):
        sentence += a[j]*int(num)
    print(sentence)

```

---

- #1157	단어 공부

```python
#오늘의 계획이지만,,아직 못 푼 문제


```

---

- #11721	열 개씩 끊어 출력하기

```python
#11721
#알파벳 소문자와 대문자로만 이루어진 길이가 N인 단어가 주어진다.한 줄에 10글자씩 끊어서 출력하는 프로그램을 작성하시오.

a = input()

for i in range(0, len(a), 10):
    print(a[i:i+10])

```

반복문을 10단위로 돌리고, 10개씩 출력

---

- #2908	상수

```python
#2908
#두 수가 주어졌을 때, 상수의 대답을 출력하는 프로그램을 작성하시오.

def reverse(a):
    return int(a[2]+a[1]+a[0])

a, b = input().split()

if reverse(a)>reverse(b):
    print(reverse(a))
else:
    print(reverse(b))

```

역순으로 뽑아주는 부분을 함수로 정의하여 풀었다. 이 역순으로 바꾸는 부분이 python으로 좋은 방법이 있을 것 같아 찾던 중 좋은 방법을 발견하였다.

a = a[::-1]

위와 같이 ::-1 을 사용하면 역순으로 정렬가능

---

- #11719	그대로 출력하기 2

```python
#11719
#입력 받은 대로 출력하는 프로그램을 작성하시오.

while True:
    try:
        print(input())
    except EOFError:
        break

```

그대로 출력하기란 문제가 위에 있었지만, 그냥 에러처리 해주니 똑같이 풀렸다,,

---

- #10872	팩토리얼

```python
#10872
#0보다 크거나 같은 정수 N이 주어진다. 이때, N!을 출력하는 프로그램을 작성하시오.

def fac(a):
    if a>1:
        return a * fac(a-1)
    else:
        return 1
    
a = int(input())

print(fac(a))

```

팩토리얼로 자기자신보다 하나 작은 수 재귀함수로 호출하는 방식

---

- #2920	음계

```python
#2920
#연주한 순서가 주어졌을 때, 이것이 ascending인지, descending인지, 아니면 mixed인지 판별하는 프로그램을 작성하시오.

a = list(map(int, input().split()))
p =""

if a[0] == 1 :
    for i in range(0, 8):
        if a[i] != i+1:
            p = "mixed"
            break
        else:
            p = "ascending"
elif a[0] == 8:
    for i in range(0, 8):
        if a[i] != 8-i:
            p = "mixed"
            break
        else:
            p= "descending"
else:
    p = "mixed"

print(p)

```


오름인지 내림인지 각각 for문을 돌렸지만, python에서 분명 좋은 방법이 있을 거 같아 찾아본 결과 굉장히 간단하게 풀 수 있다는 것을 알았다. 
오름차, 내림차 배열을 미리 선언해두는 것이다. (오름차, 내림차 모두 8숫자 정해저있는 형태이기에 가능)
[1,2,3,4,5,6,7,8]
[8,7,6,5,4,3,2,1]
이렇게 미리 정해두고 이 배열이 맞으면 오름차, 내림차로 정의하면 훨씬 간단하게 풀린다.

asc = [i for i in range(1, 9)]
dsc = [i for i in range(8, 0, -1)]

if l == asc:
    print("ascending")
elif l == dsc:
    print("descending")
else:
    print("mixed")


---

- #14681	사분면 고르기

```python
#14681
#점의 좌표를 입력받아 그 점이 어느 사분면에 속하는지 알아내는 프로그램을 작성하시오. 단, x좌표와 y좌표는 모두 양수나 음수라고 가정한다.

x = int(input())
y = int(input())

if(x>0 and y>0):
    print("1")
elif(x>0 and y<0):
    print("4")
elif(x<0 and y>0):
    print("2")
else:
    print("3")

```

---

- #5622	다이얼

```python
#5622
#다이얼

def num_output(a):
    for i in range(0, len(num)):
        for j in range(0, len(num[i])):
            if num[i][j] in a:
                return num.index(num[i])
    
num = ['ABC', 'DEF', 'GHI', 'JKL', 'MNO', 'PQRS', 'TUV', 'WXYZ']
a = input()
sum = 0

for i in range(0, len(a)):
    sum += num_output(a[i])+3

print(sum)

```

다이얼 각 영어를 배열로 만들어놓고, 입력된 숫자마다 이중 배열 사용해서 배열의 인덱스 반환하여 계산

---