---
layout: post
title:  "Baekjoon 알고리즘 60"
date:   2021-02-22 23:59 +0530
categories: python
---

알고리즘 풀기 74일차


:)

- #17298        오큰수

크기가 N인 수열 A = A1, A2, ..., AN이 있다. 수열의 각 원소 Ai에 대해서 오큰수 NGE(i)를 구하려고 한다. Ai의 오큰수는 오른쪽에 있으면서 Ai보다 큰 수 중에서 가장 왼쪽에 있는 수를 의미한다. 그러한 수가 없는 경우에 오큰수는 -1이다.

예를 들어, A = [3, 5, 2, 7]인 경우 NGE(1) = 5, NGE(2) = 7, NGE(3) = 7, NGE(4) = -1이다. 
A = [9, 5, 4, 8]인 경우에는 NGE(1) = -1, NGE(2) = 8, NGE(3) = 8, NGE(4) = -1이다.

# <풀이>

```python
#시간초과
import sys
N = int(sys.stdin.readline())
num = list(map(int, sys.stdin.readline().split()))
answer=[]
for i in range(len(num)):
     TF = True
     for j in range(i+1, len(num)):
          if num[i]<num[j]:
               answer.append(num[j])
               TF = False
               break
     if TF:
          answer.append(-1)

print(' '.join(map(str, answer)))

```

---

한번에 풀어서 테스트 코드는 다 통과했는데 시간초과가 나서 input()대신 sys.stdin.readline()으로 입력 받게 했다.

그래도 시간 초과

```python
#정답
import sys
N = int(sys.stdin.readline())
num = list(map(int, sys.stdin.readline().split()))
stack = []
ans = [-1 for _ in range(N)]

for i in range(len(num)):
    while len(stack)!=0 and num[stack[-1]] < num[i]:
        ans[stack.pop()] = num[i]
    stack.append(i)
print(*ans)

```

이중 for문을 쓰게 될 경우 시간초과가 난다. 스택으로 풀어야한다고 글을 봤다.

우선 입력받은 리스트와 같은 크기의 -1로만 채워진 리스트를 만들어준다. (조건에 맞지 않으면 그래도 -1로 놔두면 됨.)

stack리스트가 비어있지 않으면서(끝나지 않았으면서) 이전 수를 비교해서 작으면 pop해주면 된다.

