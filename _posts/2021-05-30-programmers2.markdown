---
layout: post
title: "[프로그래머스] 전화번호 목록"
date: 2021-05-30 23:01 +0530
categories: 프로그래머스 해시 정렬
---

알고리즘 풀기 223일차

:)

- # 전화번호 목록
  >

## < 문제 >

전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.

전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다.

    구조대 : 119
    박준영 : 97 674 223
    지영석 : 11 9552 4421

전화번호부에 적힌 전화번호를 담은 배열 phone_book 이 solution 함수의 매개변수로 주어질 때, 어떤 번호가 다른 번호의 접두어인 경우가 있으면 false를 그렇지 않으면 true를 return 하도록 solution 함수를 작성해주세요.

## < 제한사항 >

phone_book의 길이는 1 이상 1,000,000 이하입니다.

각 전화번호의 길이는 1 이상 20 이하입니다.

같은 전화번호가 중복해서 들어있지 않습니다.

## < 풀이 >

```python

def solution(phone_book):
    phone_book.sort()
    for i in range(len(phone_book)-1):
        if phone_book[i] in phone_book[i+1][:len(phone_book[i])]:
            return False
    return True

```

이건 진짜 승질 좀 내야함. ㅋㅋㅋㅋㅋㅋㅋㅋㅋ

저번에 얼마나 풀었는데 효율성에서 두 개 실패나서 미뤄둔 문제.(그 땐 이중 for문)

우선 문제 풀이는 간단하다. (기존에는 길이 순으로 정렬)

길이 순이 아닌 그냥 정렬을 하게 될 경우, 앞 자리들이 같은 애들끼리 모이게 된다. (한자리 한자리 비교)

문자열 정렬이기에 아래 예를 보면 이해가 될 것이다.

    [1, 2, 9, 10, 11, 20, 29, 90, 99, 100]
    ['1', '10', '100', '11', '2', '20', '29', '9', '90', '99']

숫자가 아닌 문자열인 숫자를 정렬하게 되면 어쨌든 앞자리가 같은 애들끼리 모이게 된다.

그렇기에 접두사가 되려면 일단 앞의 숫자가 뒤에 숫자 앞부분으로 오게 되기에 두 개씩 비교하면 되기에 이중 반복문이 필요없이 통과가 된다.
