---
layout: post
title:  "Baekjoon 알고리즘 65"
date:   2021-03-05 23:59 +0530
categories: python
---

알고리즘 풀기 81일차

:)

- #2747     피보나치 수

# <문제 설명>

피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.

이를 식으로 써보면 Fn = Fn-1 + Fn-2 (n ≥ 2)가 된다.

n=17일때 까지 피보나치 수를 써보면 다음과 같다.

0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597

n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.

# <제한사항>

시간 제한:  1 초 (추가 시간 없음)	
메모리 제한:  128 MB


# <풀이>

```python

import sys

p = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597]
for i in range(18, 46):
     p.append(p[i-2]+p[i-1])
     
n = int(sys.stdin.readline())
print(p[n])

```

왠지 시간 제한이 빠듯한 느낌이라 벌써부터 시간초과 에러가 아른아른,,,,

그래서 미리 예시로 준 피보나치를 넣고 어차피 입력이 45까지라 크지 않기에 미리 배열을 만들었다. (크지 않아 다행)

그래서 시간초과 없이 통과 
