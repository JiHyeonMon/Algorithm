---
layout: post
title:  "Baekjoon 알고리즘 64"
date:   2021-03-02 23:59 +0530
categories: python
---

알고리즘 풀기 78일차


:)

- #9507        Generations of Tribbles

꿍은 군대에서 진짜 할짓이 없다. 그래서 꿍만의 피보나치를 만들어보려고 한다. 기존의 피보나치는 너무 단순해서 꿍은 좀더 복잡한 피보나치를 만들어보고자 한다. 그래서 다음과 같은 피보나치를 만들었다. 꿍만의 피보나치 함수가 koong(n)이라고 할 때,

n < 2 :                         1
n = 2 :                         2
n = 3 :                         4
n > 3 : koong(n − 1) + koong(n − 2) + koong(n − 3) + koong(n − 4)

이다.

여러분도 꿍 피보나치를 구해보아라.

# <풀이>

```python
#그냥 안돌려봐도 시간초과
import sys
def koong(k):
     if k < 2 :
          return 1
     elif k == 2:
          return 2
     elif k == 3:
          return 4
     else:
          return koong(k-1) + koong(k-2) + koong(k-3) + koong(k-4)
     
for i in range(int(sys.stdin.readline())):
     n = int(sys.stdin.readline())
     print(koong(n))


```

몇 분째 재귀 돌며 큰 수 출력이 안되는 중ㅎㅎㅎ,,,,

k가 4부터는 이전 4개의 합이 된다. 그래서 배열에 그냥 넣어볼까 싶어 아래와 같이 4미만은 주어진 수를 넣어주고 이후로 입력 받는 대로 재귀함수 아닌 아래서 부터 값을 채워나가 출력하는 방식으로 코드를 짰다.

돌려보니 바로 출력된다. 혹시 시간 초과 뜰까 했는데 통과됐다. 

```python
#정답
import sys
for i in range(int(sys.stdin.readline())):
     koong=[1,1,2,4]
     n = int(sys.stdin.readline())
     for j in range(4, n+1):
          koong.append(koong[j-4]+koong[j-3]+koong[j-2]+koong[j-1])
     print(koong[n])

```

