---
layout: post
title:  "Baekjoon 알고리즘 51"
date:   2021-01-30 22:55 +0530
categories: python
---

알고리즘 풀기 64일차


:)


- #1946     신입 사원

언제나 최고만을 지향하는 굴지의 대기업 진영 주식회사가 신규 사원 채용을 실시한다. 인재 선발 시험은 1차 서류심사와 2차 면접시험으로 이루어진다. 최고만을 지향한다는 기업의 이념에 따라 그들은 최고의 인재들만을 사원으로 선발하고 싶어 한다.

그래서 진영 주식회사는, 다른 모든 지원자와 비교했을 때 서류심사 성적과 면접시험 성적 중 적어도 하나가 다른 지원자보다 떨어지지 않는 자만 선발한다는 원칙을 세웠다. 즉, 어떤 지원자 A의 성적이 다른 어떤 지원자 B의 성적에 비해 서류 심사 결과와 면접 성적이 모두 떨어진다면 A는 결코 선발되지 않는다.

이러한 조건을 만족시키면서, 진영 주식회사가 이번 신규 사원 채용에서 선발할 수 있는 신입사원의 최대 인원수를 구하는 프로그램을 작성하시오.

```python
#시간초과

import sys
for i in range(int(sys.stdin.readline())):
     score=[]
     answer=1
     for j in range(int(sys.stdin.readline())):
          score.append(list(map(int, sys.stdin.readline().split())))
     score.sort()
     tmp = [score[0][1]]
     for j in range(1, len(score)):
          if score[j][1]<min(tmp):
               answer+=1
          tmp.append(score[j][1])
          
     print(answer)

```

이렇게 풀었더니 시간초과가 떴다.

아래와 같이 풀어서 해결했다.


```python

import sys
for i in range(int(sys.stdin.readline())):
     score=[]
     answer=1
     for j in range(int(sys.stdin.readline())):
          score.append(list(map(int, sys.stdin.readline().split())))
     score.sort()
     mini = score[0][1]
     for j in range(1, len(score)):
          if score[j][1]<mini:
               answer+=1
               mini = score[j][1]
          
     print(answer)

```

위의 경우도 굉장히 비슷하다. 대신 밑은 변수 하나를 썼다면 위는 배열을 썼다.

문제 해결은 이렇다.

서류, 면접 적어도 하나가 다른 지원자보다 떨어지지 않는 자만 선발한다는 원칙. 즉 서류 3등은 면접에선 1,2등보다 성적이 좋아야한다는 것.

그리하여 입력 받은 수를 서류 기준으로 정렬을 한 뒤에 한명한명 반복문을 돌며 면접을 비교한다.

인덱스 0은 서류 1등이니 무조건 합격 보장, 그래서 인덱스 1인 2등부터 반복문을 돈다.

인덱스가 커지며 해당 값은 작아야 한다. 그래서 처음엔 배열로 해당 값을 다 저장해 min함수를 이용해서 최소를 구해 비교했지만 이게 시간을 또 한번 시간을 잡아먹게 되어 그냥 변수 하나로 치환하니 해결 됐다.

